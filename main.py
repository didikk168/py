# Python code @colordice
 

import base64, codecs
magic = 'import requests
import json
import time
import sys
import random
import argparse
import string
import pathlib
import datetime as dt
import socket
import hashlib
import keyboard
import traceback
import getpass
from colored import fg, bg, attr
from random import randint
from datetime import datetime
from requests.api import put
import websocket
from urllib.request import Request, urlopen
from bs4 import BeautifulSoup
from os import system, name
from inputimeout import inputimeout, TimeoutOccurred
from faunadb import query as q
from faunadb.objects import Ref
from faunadb.client import FaunaClient
from urllib.parse import quote_plus
from random_user_agent.user_agent import UserAgent
from random_user_agent.params import SoftwareName, OperatingSystem

software_names = [SoftwareName.CHROME.value]
operating_systems = [OperatingSystem.WINDOWS.value, OperatingSystem.LINUX.value]   

user_agent_rotator = UserAgent(software_names=software_names, operating_systems=operating_systems, limit=100)

wsoket = websocket.WebSocket()
client = FaunaClient(secret="fnAEAcAKliACCJH00BfVSH2dPZ0EIMPWHlMCTbEX")

# SET BETSET
parser = argparse.ArgumentParser(
    description='999 Dice Bot | This Is Gambling Bot Plase Take Own Your Risk')
parser.add_argument(
    '-c', '--betset',
    default=0,
    help='Enter Your Betset Number (default: 0)'
)
my_namespace = parser.parse_args()

with open('settings.json', 'r') as myfile:
    data = myfile.read()
# PARSE FILE
obj = json.loads(data)

## KEYBOARD SHORTCUT
stoponwinkey  = 'ctrl+w'

# CONFIG WARNA
res = attr('reset')
putih = fg(248)
hitam = fg(242)
hijau =fg(119)
merah = fg(204)
armygreen = fg(154)
profitcolor = bg(113) + fg(15)
losecolor = bg(202) + fg(15)
rccolor = bg('white') + fg('black')
rcfontcolor = fg('black')
orange = fg(214)

c = requests.session()
proxies = []
proxystatus = False
freeversion = True
nonmemberstatus = False
stoponwinactivated = False
linkcode = ""
client = FaunaClient(secret="fnAEAcAKliACCJH00BfVSH2dPZ0EIMPWHlMCTbEX")

## STOP ON WIN KEYBOARD TRIGER
def stoponwin_triger():
    global stoponwinactivated
    stoponwinactivated = True

def timeprocess(sec):
    minutes, seconds = divmod(sec, 60)
    hours, minutes = divmod(minutes, 60)
    days, hours = divmod(hours, 24)
    stopwatchx = (days, hours, minutes, seconds)

    return stopwatchx

def setmsgbox():

    try:
        msg = client.query(
            q.get(q.match(q.index("param_by_id"), "messagebox")))
        msgbox = msg["data"]["message"]
    except:
        msgbox = "-"

    return msgbox

def banner():
    # BANNER
    banner = "\n\n"
    banner = banner + fg(147) + attr('bold') + " ▄▄·       ▄▄▌        ▄▄▄  ·▄▄▄▄  ▪   ▄▄· ▄▄▄ .\n" + res
    banner = banner + fg(157) + attr('bold') + "▐█ ▌▪▪     ██•  ▪     ▀▄ █·██▪ ██ ██ ▐█ ▌▪▀▄.▀·\n" + res
    banner = banner + fg(167) + attr('bold') + "██ ▄▄ ▄█▀▄ ██▪   ▄█▀▄ ▐▀▀▄ ▐█· ▐█▌▐█·██ ▄▄▐▀▀▪▄\n" + res
    banner = banner + fg(177) + attr('bold') + "▐███▌▐█▌.▐▌▐█▌▐▌▐█▌.▐▌▐█•█▌██. ██ ▐█▌▐███▌▐█▄▄▌\n" + res
    banner = banner + fg(187) + attr('bold') + "·▀▀▀  ▀█▄▀▪.▀▀▀  ▀█▄▀▪.▀  ▀▀▀▀▀▀• ▀▀▀·▀▀▀  ▀▀▀ \n" + res
    banner = banner + "\n"
    banner = banner + putih + attr('bold') + "Telegram    : " + res
    banner = banner + fg(15) + "@beduplay\n" + res
    banner = banner + putih + attr('bold') + "Version     : " + res
    banner = banner + fg(15) + "v.3.0\n" + res
    print(banner)


url = "https://www.999doge.com/api/web.aspx"
user_agent = user_agent_rotator.get_random_user_agent()
ua = {
  "User-Agent": str(user_agent),
  "Accept-Language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6,zh;q=0.5"
}
uadata = {
    "Origin": "file://",
    "User-Agent": str(user_agent),
    "Accept-Language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6,zh;q=0.5",
    "Content-type": "application/x-www-form-urlencoded",
    "Accept": "*/*",
    "X-Requested-With": "com.reland.relandicebot"
}

# CLEAN PAGE
def clear():

    # for windows
    if name == 'nt':
        _ = system('cls')

    # for mac and linux(here, os.name is 'posix')
    else:
        _ = system('clear')

# CONVERT BET & AMOUNT
def konvert(persen, taruhan):
    global high
    global low
    c = str(999999 * float(persen) / 100)
    if taruhan == "Hi" or taruhan == "hi" or taruhan == "HI":
        n = str(c.split(".")[1])
        pangkat = 6 - len(n)
        low = int(int(n) * (10 ** pangkat))
        high = 999999
    if taruhan == "Lo" or taruhan == "LOW" or taruhan == "low" or taruhan == "Low" or taruhan == "LO":
        low = 0
        high = int(c.split(".")[0])

# DECIMAL 8 DIGIT
def rev(num):
    if (len(num) < 8):
        panjang_nol = int(8 - len(num))
        num = ((panjang_nol*"0")+str(num))
        result = ("0."+num)
    if (len(num) == 8):
        panjang_nol = int(8 - len(num))
        num = ((panjang_nol*"0")+str(num))
        result = ("0."+num)
    else:
        len_num = len(num)
        end = num[-8:]
        first = num[:len_num-8]
        result = (first+"."+end)
    return (result)

## FORMAT 11 DIGIT
def revlong(num):
    if (len(num) < 11):
        panjang_nol = int(11 - len(num))
        num = ((panjang_nol*"0")+str(num))
        result = ("0."+num)
    if (len(num) == 11):
        panjang_nol = int(11 - len(num))
        num = ((panjang_nol*"0")+str(num))
        result = ("0."+num)
    else:
        len_num = len(num)
        end = num[-11:]
        first = num[:len_num-11]
        result = (first+"."+end)
        tmprs = int(float(result)*(10 ** 11))
        result = (first+"."+end)
    return (result)

# API INDODAX FOR GET LAST PRICE
def indodax(coin):

    try:
        if coin == "DOGE" or coin == "doge" or coin == "Doge":
            pair = "doge_idr"
        elif coin == "LTC" or coin == "ltc" or coin == "Ltc":
            pair = "ltc_idr"
        else:
            pair = "eth_idr"

        url = 'https://indodax.com/api/' + str(pair) + '/ticker'

        indx = requests.get(url)
        jsindx = json.loads(indx.text)
        pricepair = int(jsindx["ticker"]["last"])
    except:
        if coin == "DOGE" or coin == "doge" or coin == "Doge":
            coinpair = "doge"
        elif coin == "LTC" or coin == "ltc" or coin == "Ltc":
            coinpair = "ltc"
        else:
            coinpair = "eth"

        url = "https://beducode-price.herokuapp.com/price/" + str(coinpair)

        price = c.get(url)
        data = json.loads(price.text)
        pricepair = data["last"]

    return pricepair

# FORMAT VALUE TO IDR
def rupiah_format(angka):
    return 'Rp ' + '{:0,.2f}'.format(angka)

## CHECK CURRENCY
def checkcurr(curr):
    if curr == "DOGE" or curr == "doge" or curr == "Doge":
        currbalance = js[currency]["Balance"]
    elif curr == "LTC" or curr == "ltc" or curr == "Ltc":
        currbalance = js[currency]["Balance"]
    else:
        currbalance = js[currency]["Balance"]

    return currbalance

## CHECK LOGIN
def checklogin(status):
    if status is True:
        clear()
        banner()

        print(merah + "Check Your Username or Password Again in the settings.json file File" + res)
        sys.exit()
    else:
        pass

# DEK MODE RUN AKTIF
def checkmoderun():
    moderun = 0
    urut = int(my_namespace.betset)
    if obj["Betset"][urut]["Mode1"]["Toggle"] == "ON" or obj["Betset"][urut]["Mode1"]["Toggle"] == "on" or obj["Betset"][urut]["Mode1"]["Toggle"] == "On":
        moderun += 1
    else:
        pass
    if obj["Betset"][urut]["Mode2"]["Toggle"] == "ON" or obj["Betset"][urut]["Mode2"]["Toggle"] == "on" or obj["Betset"][urut]["Mode2"]["Toggle"] == "On":
        moderun += 1
    else:
        pass
    if obj["Betset"][urut]["Mode3"]["Toggle"] == "ON" or obj["Betset"][urut]["Mode3"]["Toggle"] == "on" or obj["Betset"][urut]["Mode3"]["Toggle"] == "On":
        moderun += 1
    else:
        pass
    if obj["Betset"][urut]["Mode4"]["Toggle"] == "ON" or obj["Betset"][urut]["Mode4"]["Toggle"] == "on" or obj["Betset"][urut]["Mode4"]["Toggle"] == "On":
        moderun += 1
    else:
        pass
    if obj["Betset"][urut]["Dalembert"]["Toggle"] == "ON" or obj["Betset"][urut]["Dalembert"]["Toggle"] == "on" or obj["Betset"][urut]["Dalembert"]["Toggle"] == "On":
        moderun += 1
    else:
        pass
    if obj["Betset"][urut]["Fibonacci"]["Toggle"] == "ON" or obj["Betset"][urut]["Fibonacci"]["Toggle"] == "on" or obj["Betset"][urut]["Fibonacci"]["Toggle"] == "On":
        moderun += 1
    else:
        pass

    return moderun

# VALIDASI MODE RUN
def validatemoderun(moderun):
    if moderun > 1:
        clear()
        banner()

        print(armygreen + '\r' + putih + '>> ' + res + merah + 'You Activate More Than 1 Mode!!' +
              res + putih + ', Please Check Your Settings.json File Again' + res)
        time.sleep(2)
        sys.exit()
    else:
        pass

## CHECK 2FA
def auth2fa():
    # CLEAR BEFORE
    clear()
    banner()

    try:
        inputotp = armygreen + '\r' + putih + '>> ' + res + orange + \
            'Please enter your google authenticator code : ' + res
        otpinput = inputimeout(prompt=inputotp, timeout=600)
        if otpinput == "":
            auth2fa()
        else:
            return otpinput

    except TimeoutOccurred:
        auth2fa()


mdcount = checkmoderun()
validatemoderun(mdcount)

username = obj["Account"]["Username"]
password = obj["Account"]["Password"]
resetseed = int(obj["Account"]["Reset Seed"])
# SET UP API AKSES FROM 999DOGE.COM
if obj["Account"]["API Access"] == "OFF" or obj["Account"]["API Access"] == "off" or obj["Account"]["API Access"] == "Off":
    apiAkses = "738945f2e21e49c098ef9854158913de"
else:
    apiAkses = obj["Account"]["API Access"]

if obj["Account"]["2FA"] == "ON" or obj["Account"]["2FA"] == "on" or obj["Account"]["2FA"] == "On":
    otpstatus = True
    otp = auth2fa()
else:
    otpstatus = False

## STOP ON WIN
def stoponwin(profit, bl, mb, ls, tp):
    clear()
    banner()
    print(fg(15) + "Stop on win activated, Your Profit : " +
          res + hijau + rev(str(profit)) + res)
    print(putih + "Last Max Bet : " + res + merah + rev(str(mb)) + res)
    print(putih + "Total Lose Strike : " + res + merah + str(ls) + res)
    print(putih + "Your Current Balance : " +
          res + hijau + str(rev(str(bl))) + res)
    print(putih + "Time required : " +
          res + putih + str(tp) + res)
    print(putih + "Always Be Careful & Please Rerun The Script" + res)
    time.sleep(1)
    sys.exit()

## STOP BET
def stopbet(profit, bl, mb, ls, tp):
    clear()
    banner()
    print(fg(15) + "Maximum Bet Limit Has Been Fulfilled, Your Profit : " +
          res + hijau + rev(str(profit)) + res)
    print(putih + "Last Max Bet : " + res + merah + rev(str(mb)) + res)
    print(putih + "Total Lose Strike : " + res + merah + str(ls) + res)
    print(putih + "Your Current Balance : " +
          res + hijau + str(rev(str(bl))) + res)
    print(putih + "Time required : " +
          res + putih + str(tp) + res)
    print(putih + "Always Be Careful & Please Rerun The Script" + res)
    time.sleep(1)
    sys.exit()

## STOP CUT LS
def cutlose(ct, bl, ls, tp):
    clear()
    banner()
    print(putih + "Cut Lose Target Has Been Reached, Minus Amount : " +
          res + merah + rev(str(ct)) + res)
    print(putih + "Total Lose Strike : " + res + merah + str(ls) + res)
    print(putih + "Your Current Balance : " +
          res + merah + str(rev(str(bl))) + res)
    print(putih + "Time required : " +
          res + putih + tp + res)
    print(merah + "STOP!!!" + res + putih +
          ", Recalculate Your Betset & Try Analyzing Again" + res)
    time.sleep(1)
    sys.exit()

## STOP LIMIT LS
def stoplimitls(pf, bl, mb, ls, tp):
    clear()
    banner()
    print(fg(15) + "Lose Strike Limit Has Been Fulfilled, Your Profit : " +
          res + hijau + rev(str(pf)) + res)
    print(putih + "Last Max Bet : " + res + merah + rev(str(mb)) + res)
    print(putih + "Total Lose Strike : " + res + merah + str(ls) + res)
    print(putih + "Your Current Balance : " +
          res + hijau + str(rev(str(bl))) + res)
    print(putih + "Time required : " +
          res + putih + str(tp) + res)
    print(putih + "Always Be Careful & Please Rerun The Script" + res)
    time.sleep(1)
    sys.exit()

## STOP TARGET PROFIT
def targetprofit(profit, bl, mb, ls, tp):
    clear()
    banner()
    print(fg(15) + "Profit Target Has Been Achieved : " +
          res + hijau + rev(str(profit)) + res)
    print(putih + "Last Max Bet : " + res + merah + rev(str(mb)) + res)
    print(putih + "Total Lose Strike : " + res + merah + str(ls) + res)
    print(putih + "Your Current Balance : " +
          res + hijau + str(rev(str(bl))) + res)
    print(putih + "Time required : " +
          res + putih + str(tp) + res)
    print(putih + "Always Be Careful & Please Rerun The Script" + res)
    time.sleep(1)
    sys.exit()

## STOP BALANCE WIN
def targetbalance(profit, bl, mb, ls, tp):
    clear()
    banner()
    print(fg(15) + "Target Balance Has Been Reached : " +
          res + hijau + rev(str(profit)) + res)
    print(putih + "Last Max Bet : " + res + merah + rev(str(mb)) + res)
    print(putih + "Total Lose Strike : " + res + merah + str(ls) + res)
    print(putih + "Your Current Balance : " +
          res + hijau + str(rev(str(bl))) + res)
    print(putih + "Time required : " +
          res + putih + str(tp) + res)
    print(putih + "Always Be Careful & Please Rerun The Script" + res)
    time.sleep(1)
    sys.exit()

## STOP TARGET LOSS
def targetlose(tl, bl, mb, ls, tp):
    clear()
    banner()
    print(fg(15) + "Lose Target Has Been Reached, Minus Amount : " +
          res + merah + rev(str(tl)) + res)
    print(putih + "Last Max Bet : " + res + merah + rev(str(mb)) + res)
    print(putih + "Total Lose Strike : " + res + merah + str(ls) + res)
    print(putih + "Your Current Balance : " +
          res + merah + str(rev(str(bl))) + res)
    print(putih + "Time required : " +
          res + putih + str(tp) + res)
    print(merah + "STOP!!!" + res + putih +
          ", Recalculate Your Betset & Try Analyzing Again" + res)
    time.sleep(1)
    sys.exit()

## FIBONACHI CALCULATOR
def fibocal(n):
    if n <= 1:
        return n+1
    else:
        return(fibocal(n-1) + fibocal(n-2))


# CLEAR BEFORE
clear()
banner()

pilcurr = obj["Account"]["Currency"]
if pilcurr == "DOGE" or pilcurr == "doge" or pilcurr == "Doge":
    currency = "Doge"
    intcur = 2
elif pilcurr == "LTC" or pilcurr == "ltc" or pilcurr == "Ltc":
    currency = "LTC"
    intcur = 3
elif pilcurr == "ETH" or pilcurr == "eth" or pilcurr == "Eth":
    currency = "ETH"
    intcur = 4
else:
    print("Currency type is not supported, please check your settings.json file again!")
    sys.exit()


## CONNECT WITH SOCKET
def connectbet(text_cmd):
  wsoket.send(json.dumps(text_cmd))
  while True:
    result = wsoket.recv()
    if "status" in result:
      jsn = json.loads(result)["R"]
      if jsn["status"] == 0:
          return jsn
      else:
         time.sleep(0.5)
         connectbet(text_cmd)

# UI RANGE CHANCE
def rangeChance(hc):
    panjangrd = len(str(hc))
    if panjangrd == 3:
        chancerand = " " + str(hc) + "   "
    if panjangrd == 4:
        chancerand = " " + str(hc) + "  "
    if panjangrd == 5:
        chancerand = " " + str(hc) + " "
        
    return chancerand

## LOAD TRIGER CHANCE
def loadTrigetC(num):
    result_triger = random.uniform(1,num)
    return int(result_triger)

## RANDOM CHANCE   
def randomChance(min, max):
    hasil_chance = round(random.uniform(float(min), float(max)), 2)

    return hasil_chance

## RANDOM CHANCE
def settingChance(LCMin, LCMax):
    urut = 0
    if obj["Betset"][urut]["Random Chance"]["Toggle"] == "ON" or obj["Betset"][urut]["Random Chance"]["Toggle"] == "On" or obj["Betset"][urut]["Random Chance"]["Toggle"] == "on":
        
        chanceval = randomChance(LCMin, LCMax)
        chancerand = rangeChance(chanceval)
        
    else:
        
        chanceval = float(LCMin)
        chancerand = rangeChance(chanceval)
        
    return chanceval, chancerand

# REFRESH PAGE
def refresh_page():
    clear()
    banner()


def datereg():
    now = datetime.now()

    year = now.strftime("%Y")
    month = now.strftime("%m")
    day = now.strftime("%d")
    time = now.strftime("%H:%M:%S")

    date_register = now.strftime("%d/%m/%y %H:%M:%S")
    
    return date_register

## NON MEMBER REGISTER VALIDATION
def checknonmemberuser(code):
    try:        
        checkuser = client.query(q.get(q.match(q.index("nonmember_by_code"), code)))
        
        userregis = checkuser["data"]["username"]
                
    except:
        validatefree()
    
    return userregis

def checknonmember(code):
    try:        
        member = client.query(q.get(q.match(q.index("nonmember_by_code"), code)))
        
        status = int(member["data"]["register_status"])
                
    except:
        status = 0
    
    return status

def registernonmember(ip, code, user):
    try:
        freeacc = client.query(
            q.create(
               q.collection("colordice_nonmember"),
                { 
                "data": 
                    {    
                    "ip": str(ip),
                    "passcode": str(code),   
                    "username": str(user), 
                    "regdate": str(datereg()),
                    "register_status": "1" 
                    }
                 },
            )
        )
        
    except:
        validatefree()

def validatenonmember():
    refresh_page()
    
    if username == "XXXX" or username == "" or password == "XXXX" or password == "":
        checklogin(True)
    
    whoyou = hashlib.md5(getpass.getuser().encode())
    hostname = socket.gethostname()
    ip = socket.gethostbyname(hostname)
    
    passcode = whoyou.hexdigest()
    
    registerstatus = checknonmember(passcode)
    if registerstatus == 1:
        reguser = checknonmemberuser(passcode)
        if username == reguser:
            pass
        else:
            print(putih + "You have used a bot with account name " + str(reguser) + ", please contact the owner for more information" + res)
            time.sleep(1)
            sys.exit()
    else:
        registernonmember(ip, passcode, username)
        validatenonmember()

## MEMBER REGISTER VALIDATION
def createfilepass(passc):
    refresh_page()
    f = open("activated.pass", "w+")
    f.write(passc)
    f.close()
    
def readpass(fl):
    f = open(fl, "r")
    if f.mode == 'r':
        passc = f.read()

    return passc

def checkregisteractivated(code):
    try:        
        member = client.query(q.get(q.match(q.index("colordice_registered"), code)))
        
        status = int(member["data"]["activated_status"])
                
    except:
        status = 0
    
    return status

def checkcodeactivated(code):
    try:        
        member = client.query(q.get(q.match(q.index("colordice_activated"), code)))
        
        status = int(member["data"]["activated_status"])
                
    except:
        status = 0
    
    return status

def registermember(ip, code, user, regiscode):
    try:
        memberacc = client.query(
            q.create(
               q.collection("colordice_register"),
                { 
                "data": 
                    {    
                    "ip": str(ip),
                    "passcode": str(code),
                    "activated_code": str(regiscode),   
                    "username": str(user), 
                    "regdate": str(datereg()),
                    "register_status": "1" 
                    }
                 },
            )
        )
        updatememberstatus(regiscode)
        
    except:
        validatemember()

def updatememberstatus(code):
    try:
        member = client.query(q.get(q.match(q.index("colordice_activated"), code)))
        ref = member["ref"].value["id"]
        client.query(q.update(q.ref(q.collection("colordice_activated"), ref), 
            { 
                "data": 
                    { 
                        "activated_status": "0" 
                    } 
                } 
            ))
    except:
        validatemember()
        
def checkmemberuser(code):
    try:        
        checkuser = client.query(q.get(q.match(q.index("register_by_code"), code)))
        
        userregis = checkuser["data"]["username"]
                
    except:
        validatemember()
    
    return userregis

def checkmember(code):
    try:        
        member = client.query(q.get(q.match(q.index("register_by_code"), code)))
        
        status = int(member["data"]["register_status"])
                
    except:
        status = 0
    
    return status

def validatemember():
    refresh_page()
    
    if username == "XXXX" or username == "" or password == "XXXX" or password == "":
        checklogin(True)
 
    whoyou = hashlib.md5(getpass.getuser().encode())
    hostname = socket.gethostname()
    ip = socket.gethostbyname(hostname)
    
    passcode = whoyou.hexdigest()
    
    registerstatus = checkmember(passcode)
    
    if registerstatus == 1:
        memberuser = checkmemberuser(passcode)
        if username == memberuser:
            pass
        else:
            print(putih + "You have used a bot with account name " + str(memberuser) + ", please contact the owner for more information" + res)
            time.sleep(1)
            sys.exit()
    else:
        try:
            inputpass = fg(62) + '\r' + fg(15) + '>> ' + res + fg(202) + 'Please Enter Your Activation Code: ' + res
            passinput = inputimeout(prompt=inputpass, timeout=600)
            if passinput == "":
                validatemember()
            else:
                validcode = checkcodeactivated(passinput)
                if validcode == 1:
                    registermember(ip, passcode, username, passinput)
                    createfilepass(passinput)
                else:
                    refresh_page()
                    print("The Activation Code You Entered is Wrong, Please Try Again")
                    time.sleep(2)
                    validatemember()
                
        except TimeoutOccurred:
            valid'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))